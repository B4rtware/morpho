# based on: https://github.com/labs42io/circleci-monorepo/blob/master/.circleci/config.yml

version: 2.1

parameters:
  trigger:
    type: boolean
    default: true

  docs:
    type: boolean
    default: false

  morpho:
    type: boolean
    default: false

jobs:
  trigger-workflows:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Trigger workflows
          command: chmod +x .circleci/circle_trigger.sh && .circleci/circle_trigger.sh

  tests:
    docker:
      - image: b4rtware/morpho-test:python3.8.3-openjdk11-buster
    steps:
      - checkout

      - restore_cache:
          keys:
            - morpho-{{ checksum "poetry.lock" }}

      - run:
          name: Install Poetry
          command: pip install poetry

      - run:
          name: Install Dependencies
          command: poetry install

      - save_cache:
          key: morpho-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs

      - persist_to_workspace:
          root: /home/circleci/.cache/pypoetry
          paths:
            - virtualenvs/*

      - run:
          name: Run Unit Tests
          command: |
            mkdir test_results
            poetry run python -m pytest --junitxml=test-results/junit.xml tests/unit

      # - run:
      #     name: Run Integration Tests
      #     command: |
      #       poetry run python -m pytest --junitxml=test-results/junit-integration.xml -s tests/integration

      - run:
          name: Run Coverage
          command: |
            poetry run python -m pytest --cov=morpho tests/unit

      - run:
          name: Send to Codecov
          command: poetry run python -m codecov
          when: on_success

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

      # - run:
      #     name: Send to Telegram
      #     command: poetry run python -m notifier.py

  build-docs:
    docker:
      - image: circleci/python:3.8.5-buster
    steps:
      - checkout

      - run:
          name: Install enchant
          command: "sudo apt-get install libenchant-dev"

      - restore_cache:
          keys:
            - morpho-{{ checksum "poetry.lock" }}

      - run:
          name: Install Poetry
          command: pip install poetry

      - run:
          name: Install Dependencies
          command: poetry install

      - save_cache:
          key: morpho-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs

      - run:
          name: Build Documentation
          command: poetry run sphinx-build -M html ./docs/sphinx ./docs/dist -v

      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - "docs/dist/html"

  deploy-docs:
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: /home/circleci/project

      - add_ssh_keys:
          fingerprints:
            - "aa:ed:87:a9:e2:8a:ca:4a:6b:67:70:ed:6d:85:33:23"
      - run:
          name: Deploy over ssh via rsync
          command: |
             rsync -avz docs/dist/html/ $SSH_USER@$SSH_HOST:$SSH_PATH

      - run:
          name: Copy files into docker
          command: ssh $SSH_USER@$SSH_HOST "$SSH_COMMAND"


workflows:
  version: 2

  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows

  docs:
    when: << pipeline.parameters.docs >>
    jobs:
      - build-docs
      - deploy-docs:
          requires:
            - build-docs

  tests:
    when: << pipeline.parameters.morpho >>
    jobs:
      - tests