# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import dtaservice.dtaservice_pb2 as dtaservice__pb2


class DTAServerStub(object):
  """The DTA service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.TransformDocument = channel.unary_unary(
        '/dtaservice.DTAServer/TransformDocument',
        request_serializer=dtaservice__pb2.DocumentRequest.SerializeToString,
        response_deserializer=dtaservice__pb2.TransformDocumentResponse.FromString,
        )
    self.ListServices = channel.unary_unary(
        '/dtaservice.DTAServer/ListServices',
        request_serializer=dtaservice__pb2.ListServiceRequest.SerializeToString,
        response_deserializer=dtaservice__pb2.ListServicesResponse.FromString,
        )
    self.TransformPipe = channel.unary_unary(
        '/dtaservice.DTAServer/TransformPipe',
        request_serializer=dtaservice__pb2.TransformPipeRequest.SerializeToString,
        response_deserializer=dtaservice__pb2.TransformDocumentResponse.FromString,
        )


class DTAServerServicer(object):
  """The DTA service definition.
  """

  def TransformDocument(self, request, context):
    """Request to transform a plain text document
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListServices(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TransformPipe(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DTAServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'TransformDocument': grpc.unary_unary_rpc_method_handler(
          servicer.TransformDocument,
          request_deserializer=dtaservice__pb2.DocumentRequest.FromString,
          response_serializer=dtaservice__pb2.TransformDocumentResponse.SerializeToString,
      ),
      'ListServices': grpc.unary_unary_rpc_method_handler(
          servicer.ListServices,
          request_deserializer=dtaservice__pb2.ListServiceRequest.FromString,
          response_serializer=dtaservice__pb2.ListServicesResponse.SerializeToString,
      ),
      'TransformPipe': grpc.unary_unary_rpc_method_handler(
          servicer.TransformPipe,
          request_deserializer=dtaservice__pb2.TransformPipeRequest.FromString,
          response_serializer=dtaservice__pb2.TransformDocumentResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dtaservice.DTAServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
