// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dtaservice.proto

package dtaservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the document to be transformed
type DocumentRequest struct {
	FileName             string   `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Document             []byte   `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
	ServiceName          string   `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Options              []string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocumentRequest) Reset()         { *m = DocumentRequest{} }
func (m *DocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DocumentRequest) ProtoMessage()    {}
func (*DocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_19a8961c93bb1a58, []int{0}
}

func (m *DocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentRequest.Unmarshal(m, b)
}
func (m *DocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentRequest.Marshal(b, m, deterministic)
}
func (m *DocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentRequest.Merge(m, src)
}
func (m *DocumentRequest) XXX_Size() int {
	return xxx_messageInfo_DocumentRequest.Size(m)
}
func (m *DocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentRequest proto.InternalMessageInfo

func (m *DocumentRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *DocumentRequest) GetDocument() []byte {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *DocumentRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *DocumentRequest) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

// The response message containing the transformed message
type TransformDocumentReply struct {
	TransDocument        []byte   `protobuf:"bytes,1,opt,name=trans_document,json=transDocument,proto3" json:"trans_document,omitempty"`
	TransOutput          []string `protobuf:"bytes,2,rep,name=trans_output,json=transOutput,proto3" json:"trans_output,omitempty"`
	Error                []string `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransformDocumentReply) Reset()         { *m = TransformDocumentReply{} }
func (m *TransformDocumentReply) String() string { return proto.CompactTextString(m) }
func (*TransformDocumentReply) ProtoMessage()    {}
func (*TransformDocumentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_19a8961c93bb1a58, []int{1}
}

func (m *TransformDocumentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransformDocumentReply.Unmarshal(m, b)
}
func (m *TransformDocumentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransformDocumentReply.Marshal(b, m, deterministic)
}
func (m *TransformDocumentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransformDocumentReply.Merge(m, src)
}
func (m *TransformDocumentReply) XXX_Size() int {
	return xxx_messageInfo_TransformDocumentReply.Size(m)
}
func (m *TransformDocumentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TransformDocumentReply.DiscardUnknown(m)
}

var xxx_messageInfo_TransformDocumentReply proto.InternalMessageInfo

func (m *TransformDocumentReply) GetTransDocument() []byte {
	if m != nil {
		return m.TransDocument
	}
	return nil
}

func (m *TransformDocumentReply) GetTransOutput() []string {
	if m != nil {
		return m.TransOutput
	}
	return nil
}

func (m *TransformDocumentReply) GetError() []string {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListServiceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServiceRequest) Reset()         { *m = ListServiceRequest{} }
func (m *ListServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListServiceRequest) ProtoMessage()    {}
func (*ListServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_19a8961c93bb1a58, []int{2}
}

func (m *ListServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServiceRequest.Unmarshal(m, b)
}
func (m *ListServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServiceRequest.Merge(m, src)
}
func (m *ListServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListServiceRequest.Size(m)
}
func (m *ListServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServiceRequest proto.InternalMessageInfo

type ListServicesResponse struct {
	Services             []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServicesResponse) Reset()         { *m = ListServicesResponse{} }
func (m *ListServicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListServicesResponse) ProtoMessage()    {}
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19a8961c93bb1a58, []int{3}
}

func (m *ListServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServicesResponse.Unmarshal(m, b)
}
func (m *ListServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServicesResponse.Marshal(b, m, deterministic)
}
func (m *ListServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesResponse.Merge(m, src)
}
func (m *ListServicesResponse) XXX_Size() int {
	return xxx_messageInfo_ListServicesResponse.Size(m)
}
func (m *ListServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesResponse proto.InternalMessageInfo

func (m *ListServicesResponse) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

type TransformPipeRequest struct {
	Pipe                 []*DocumentRequest `protobuf:"bytes,1,rep,name=pipe,proto3" json:"pipe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TransformPipeRequest) Reset()         { *m = TransformPipeRequest{} }
func (m *TransformPipeRequest) String() string { return proto.CompactTextString(m) }
func (*TransformPipeRequest) ProtoMessage()    {}
func (*TransformPipeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_19a8961c93bb1a58, []int{4}
}

func (m *TransformPipeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransformPipeRequest.Unmarshal(m, b)
}
func (m *TransformPipeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransformPipeRequest.Marshal(b, m, deterministic)
}
func (m *TransformPipeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransformPipeRequest.Merge(m, src)
}
func (m *TransformPipeRequest) XXX_Size() int {
	return xxx_messageInfo_TransformPipeRequest.Size(m)
}
func (m *TransformPipeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransformPipeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransformPipeRequest proto.InternalMessageInfo

func (m *TransformPipeRequest) GetPipe() []*DocumentRequest {
	if m != nil {
		return m.Pipe
	}
	return nil
}

func init() {
	proto.RegisterType((*DocumentRequest)(nil), "dtaservice.DocumentRequest")
	proto.RegisterType((*TransformDocumentReply)(nil), "dtaservice.TransformDocumentReply")
	proto.RegisterType((*ListServiceRequest)(nil), "dtaservice.ListServiceRequest")
	proto.RegisterType((*ListServicesResponse)(nil), "dtaservice.ListServicesResponse")
	proto.RegisterType((*TransformPipeRequest)(nil), "dtaservice.TransformPipeRequest")
}

func init() { proto.RegisterFile("dtaservice.proto", fileDescriptor_19a8961c93bb1a58) }

var fileDescriptor_19a8961c93bb1a58 = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xd5, 0x26, 0xa5, 0x24, 0x93, 0x94, 0x8f, 0x95, 0x55, 0x59, 0x4e, 0x45, 0xcd, 0x4a, 0x45,
	0xa1, 0x52, 0xb2, 0x22, 0x48, 0x1c, 0x7a, 0x6b, 0x14, 0x89, 0x0b, 0x82, 0xc8, 0xe4, 0xc0, 0xad,
	0xda, 0xc4, 0xdb, 0xb0, 0xc2, 0xf6, 0xba, 0xbb, 0xeb, 0x14, 0x84, 0xb8, 0xf0, 0x07, 0x38, 0xf0,
	0xd3, 0xf8, 0x01, 0x48, 0x88, 0xff, 0xc0, 0x15, 0x79, 0xfd, 0x51, 0x43, 0x0a, 0xea, 0xcd, 0x33,
	0xf3, 0xe6, 0xcd, 0x7b, 0xcf, 0x5a, 0xb8, 0x17, 0x1a, 0xa6, 0xb9, 0xda, 0x88, 0x15, 0x1f, 0xa7,
	0x4a, 0x1a, 0x89, 0xe1, 0xaa, 0xe3, 0x1d, 0xac, 0xa5, 0x5c, 0x47, 0x9c, 0xb2, 0x54, 0x50, 0x96,
	0x24, 0xd2, 0x30, 0x23, 0x64, 0xa2, 0x0b, 0xa4, 0xf7, 0x6c, 0x2d, 0xcc, 0xdb, 0x6c, 0x39, 0x5e,
	0xc9, 0x98, 0xc6, 0x97, 0xc2, 0xbc, 0x93, 0x97, 0x74, 0x2d, 0x47, 0x76, 0x38, 0xda, 0xb0, 0x48,
	0x84, 0xcc, 0x48, 0xa5, 0x69, 0xfd, 0x59, 0xec, 0x91, 0x2f, 0x08, 0xee, 0xce, 0xe4, 0x2a, 0x8b,
	0x79, 0x62, 0x02, 0x7e, 0x91, 0x71, 0x6d, 0xf0, 0x00, 0xba, 0xe7, 0x22, 0xe2, 0x67, 0x09, 0x8b,
	0xb9, 0x8b, 0x7c, 0x34, 0xec, 0x06, 0x9d, 0xbc, 0xf1, 0x92, 0xc5, 0x1c, 0x7b, 0xd0, 0x09, 0x4b,
	0xbc, 0xdb, 0xf2, 0xd1, 0xb0, 0x1f, 0xd4, 0x35, 0x7e, 0x0c, 0xfd, 0x52, 0x6d, 0xb1, 0xdb, 0xce,
	0x77, 0xa7, 0xbb, 0x3f, 0xbe, 0x1f, 0xb6, 0xde, 0xa0, 0xa0, 0x57, 0xce, 0x2c, 0x8d, 0x0b, 0xb7,
	0x65, 0x6a, 0x0d, 0xb8, 0x3b, 0x7e, 0x7b, 0xd8, 0x0d, 0xaa, 0x92, 0xbc, 0x87, 0xfd, 0x85, 0x62,
	0x89, 0x3e, 0x97, 0x2a, 0xbe, 0x52, 0x96, 0x46, 0x1f, 0xf0, 0x11, 0xdc, 0x31, 0xf9, 0xe4, 0xac,
	0x16, 0x80, 0xac, 0x80, 0x3d, 0xdb, 0xad, 0xb0, 0xf8, 0x21, 0xf4, 0x0b, 0x98, 0xcc, 0x4c, 0x9a,
	0xe5, 0x2a, 0x73, 0xfe, 0x9e, 0xed, 0xbd, 0xb2, 0x2d, 0xec, 0xc0, 0x2d, 0xae, 0x94, 0x54, 0x6e,
	0xdb, 0xce, 0x8a, 0x82, 0x38, 0x80, 0x5f, 0x08, 0x6d, 0x5e, 0x17, 0x32, 0xcb, 0x34, 0xc8, 0x04,
	0x9c, 0x46, 0x57, 0x07, 0x5c, 0xa7, 0x32, 0xd1, 0x36, 0x88, 0xd2, 0x90, 0x76, 0x91, 0xa5, 0xa9,
	0x6b, 0xf2, 0x1c, 0x9c, 0xda, 0xc3, 0x5c, 0xa4, 0x15, 0x17, 0xa6, 0xb0, 0x93, 0x8a, 0x94, 0x5b,
	0x7c, 0x6f, 0x32, 0x18, 0x37, 0x7e, 0xf8, 0x5f, 0x3f, 0x21, 0xb0, 0xc0, 0xc9, 0xaf, 0x16, 0x74,
	0x67, 0x8b, 0xd3, 0xfc, 0x38, 0x57, 0xf8, 0x23, 0xdc, 0xdf, 0x8a, 0x06, 0xff, 0x8f, 0xc5, 0x23,
	0xcd, 0xe1, 0xf5, 0xb1, 0x92, 0xa3, 0xcf, 0xdf, 0x7e, 0x7e, 0x6d, 0x1d, 0x12, 0x8f, 0x6e, 0x9e,
	0xd0, 0xd0, 0x30, 0x5a, 0xc5, 0x4b, 0x4d, 0xb5, 0x70, 0x82, 0x8e, 0x71, 0x02, 0xfd, 0x66, 0x0e,
	0xf8, 0x41, 0x93, 0x7a, 0x3b, 0x37, 0xcf, 0xff, 0xc7, 0xbc, 0x4e, 0x90, 0x1c, 0xd8, 0xc3, 0xfb,
	0xd8, 0xa9, 0x0e, 0x97, 0x68, 0x1a, 0x09, 0x6d, 0xf0, 0x27, 0xd8, 0xfb, 0x23, 0x43, 0xec, 0x5f,
	0xeb, 0xa5, 0x11, 0xef, 0x8d, 0xdc, 0x3e, 0xb2, 0x47, 0x7d, 0x32, 0xb0, 0x47, 0xb7, 0x9c, 0x8e,
	0xf2, 0xd8, 0x4f, 0xd0, 0xf1, 0x94, 0x80, 0x13, 0xf2, 0xb1, 0xc9, 0x46, 0x4b, 0xae, 0x22, 0x91,
	0x8c, 0x2f, 0x42, 0x9d, 0xb3, 0x4f, 0x3b, 0xb3, 0xc5, 0xe9, 0x3c, 0x7f, 0x3a, 0x73, 0xb4, 0xdc,
	0xb5, 0x6f, 0xe8, 0xe9, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0xdf, 0x80, 0xb9, 0xb9, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DTAServerClient is the client API for DTAServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DTAServerClient interface {
	// Request to transform a plain text document
	TransformDocument(ctx context.Context, in *DocumentRequest, opts ...grpc.CallOption) (*TransformDocumentReply, error)
	ListServices(ctx context.Context, in *ListServiceRequest, opts ...grpc.CallOption) (*ListServicesResponse, error)
	TransformPipe(ctx context.Context, in *TransformPipeRequest, opts ...grpc.CallOption) (*TransformDocumentReply, error)
}

type dTAServerClient struct {
	cc *grpc.ClientConn
}

func NewDTAServerClient(cc *grpc.ClientConn) DTAServerClient {
	return &dTAServerClient{cc}
}

func (c *dTAServerClient) TransformDocument(ctx context.Context, in *DocumentRequest, opts ...grpc.CallOption) (*TransformDocumentReply, error) {
	out := new(TransformDocumentReply)
	err := c.cc.Invoke(ctx, "/dtaservice.DTAServer/TransformDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dTAServerClient) ListServices(ctx context.Context, in *ListServiceRequest, opts ...grpc.CallOption) (*ListServicesResponse, error) {
	out := new(ListServicesResponse)
	err := c.cc.Invoke(ctx, "/dtaservice.DTAServer/ListServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dTAServerClient) TransformPipe(ctx context.Context, in *TransformPipeRequest, opts ...grpc.CallOption) (*TransformDocumentReply, error) {
	out := new(TransformDocumentReply)
	err := c.cc.Invoke(ctx, "/dtaservice.DTAServer/TransformPipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DTAServerServer is the server API for DTAServer service.
type DTAServerServer interface {
	// Request to transform a plain text document
	TransformDocument(context.Context, *DocumentRequest) (*TransformDocumentReply, error)
	ListServices(context.Context, *ListServiceRequest) (*ListServicesResponse, error)
	TransformPipe(context.Context, *TransformPipeRequest) (*TransformDocumentReply, error)
}

// UnimplementedDTAServerServer can be embedded to have forward compatible implementations.
type UnimplementedDTAServerServer struct {
}

func (*UnimplementedDTAServerServer) TransformDocument(ctx context.Context, req *DocumentRequest) (*TransformDocumentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransformDocument not implemented")
}
func (*UnimplementedDTAServerServer) ListServices(ctx context.Context, req *ListServiceRequest) (*ListServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServices not implemented")
}
func (*UnimplementedDTAServerServer) TransformPipe(ctx context.Context, req *TransformPipeRequest) (*TransformDocumentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransformPipe not implemented")
}

func RegisterDTAServerServer(s *grpc.Server, srv DTAServerServer) {
	s.RegisterService(&_DTAServer_serviceDesc, srv)
}

func _DTAServer_TransformDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DTAServerServer).TransformDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dtaservice.DTAServer/TransformDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DTAServerServer).TransformDocument(ctx, req.(*DocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DTAServer_ListServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DTAServerServer).ListServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dtaservice.DTAServer/ListServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DTAServerServer).ListServices(ctx, req.(*ListServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DTAServer_TransformPipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransformPipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DTAServerServer).TransformPipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dtaservice.DTAServer/TransformPipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DTAServerServer).TransformPipe(ctx, req.(*TransformPipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DTAServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dtaservice.DTAServer",
	HandlerType: (*DTAServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TransformDocument",
			Handler:    _DTAServer_TransformDocument_Handler,
		},
		{
			MethodName: "ListServices",
			Handler:    _DTAServer_ListServices_Handler,
		},
		{
			MethodName: "TransformPipe",
			Handler:    _DTAServer_TransformPipe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dtaservice.proto",
}
