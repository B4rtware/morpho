"""
This type stub file was generated by pyright.
"""

import sys
from typing import Any, Optional

"""
    flask._compat
    ~~~~~~~~~~~~~

    Some py2/py3 compatibility support based on a stripped down
    version of six so we don't have to depend on a specific version
    of it.

    :copyright: 2010 Pallets
    :license: BSD-3-Clause
"""
PY2 = sys.version_info[0] == 2
_identity = lambda x: x
if not PY2:
    iterkeys = lambda d: iter(d.keys())
    itervalues = lambda d: iter(d.values())
    iteritems = lambda d: iter(d.items())
    def reraise(tp, value, tb: Optional[Any] = ...):
        ...
    
    implements_to_string = _identity
else:
    iterkeys = lambda d: d.iterkeys()
    itervalues = lambda d: d.itervalues()
    iteritems = lambda d: d.iteritems()
    def implements_to_string(cls):
        ...
    
def with_metaclass(meta, *bases):
    """Create a base class with a metaclass."""
    class metaclass(type):
        ...
    
    

BROKEN_PYPY_CTXMGR_EXIT = False
if hasattr(sys, "pypy_version_info"):
    class _Mgr(object):
        def __enter__(self):
            ...
        
        def __exit__(self, *args):
            ...
        
    
    
class _DeprecatedBool(object):
    def __init__(self, name, version, value):
        self.message = ...
        self.value = ...
    
    def _warn(self):
        ...
    
    def __eq__(self, other):
        ...
    
    def __ne__(self, other):
        ...
    
    def __bool__(self):
        ...
    
    __nonzero__ = ...


json_available = _DeprecatedBool("flask.json_available", "2.0.0", True)
