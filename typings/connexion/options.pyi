"""
This type stub file was generated by pyright.
"""

import logging
import pathlib
from typing import Any

MODULE_PATH = pathlib.Path(__file__).absolute().parent
NO_UI_MSG = """The swagger_ui directory could not be found.
    Please install connexion with extra install: pip install connexion[swagger-ui]
    or provide the path to your local installation by passing swagger_path=<your path>
"""
logger = logging.getLogger("connexion.options")
class ConnexionOptions(object):
    def __init__(self, options: Optional[Any] = ..., oas_version=...):
        self.oas_version = ...
    
    def extend(self, new_values: Optional[Any] = ...):
        """
        Return a new instance of `ConnexionOptions` using as default the currently
        defined options.
        """
        ...
    
    def as_dict(self):
        ...
    
    @property
    def openapi_spec_available(self):
        """
        Whether to make available the OpenAPI Specification under
        `openapi_spec_path`.

        Default: True
        """
        ...
    
    @property
    def openapi_console_ui_available(self):
        """
        Whether to make the OpenAPI Console UI available under the path
        defined in `openapi_console_ui_path` option.

        Default: True
        """
        ...
    
    @property
    def openapi_spec_path(self):
        """
        Path to mount the OpenAPI Console UI and make it accessible via a browser.

        Default: /openapi.json for openapi3, otherwise /swagger.json
        """
        ...
    
    @property
    def openapi_console_ui_path(self):
        """
        Path to mount the OpenAPI Console UI and make it accessible via a browser.

        Default: /ui
        """
        ...
    
    @property
    def openapi_console_ui_from_dir(self):
        """
        Custom OpenAPI Console UI directory from where Connexion will serve
        the static files.

        Default: Connexion's vendored version of the OpenAPI Console UI.
        """
        ...
    
    @property
    def openapi_console_ui_config(self):
        """
        Custom OpenAPI Console UI config.

        Default: None
        """
        ...
    
    @property
    def uri_parser_class(self):
        """
        The class to use for parsing URIs into path and query parameters.
        Default: None
        """
        ...
    


def filter_values(dictionary):
    """
    Remove `None` value entries in the dictionary.

    :param dictionary:
    :return:
    """
    ...

