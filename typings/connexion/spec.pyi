"""
This type stub file was generated by pyright.
"""

import abc
from typing import Any, Optional

NO_SPEC_VERSION_ERR_MSG = """Unable to get the spec version.
You are missing either '"swagger": "2.0"' or '"openapi": "3.0.0"'
from the top level of your spec."""
def canonical_base_path(base_path):
    """
    Make given "basePath" a canonical base URL which can be prepended to paths starting with "/".
    """
    ...

class Specification(collections_abc.Mapping):
    def __init__(self, raw_spec):
        ...
    
    @classmethod
    @abc.abstractmethod
    def _set_defaults(cls, spec):
        """ set some default values in the spec
        """
        ...
    
    @classmethod
    @abc.abstractmethod
    def _validate_spec(cls, spec):
        """ validate spec against schema
        """
        ...
    
    def get_path_params(self, path):
        ...
    
    def get_operation(self, path, method):
        ...
    
    @property
    def raw(self):
        ...
    
    @property
    def version(self):
        ...
    
    @property
    def security(self):
        ...
    
    def __getitem__(self, k):
        ...
    
    def __iter__(self):
        ...
    
    def __len__(self):
        ...
    
    @staticmethod
    def _load_spec_from_file(arguments, specification):
        """
        Loads a YAML specification file, optionally rendering it with Jinja2.
        Takes:
          arguments - passed to Jinja2 renderer
          specification - path to specification
        """
        ...
    
    @classmethod
    def from_file(cls, spec, arguments: Optional[Any] = ...):
        """
        Takes in a path to a YAML file, and returns a Specification
        """
        ...
    
    @staticmethod
    def _get_spec_version(spec):
        ...
    
    @classmethod
    def from_dict(cls, spec):
        """
        Takes in a dictionary, and returns a Specification
        """
        ...
    
    def clone(self):
        ...
    
    @classmethod
    def load(cls, spec, arguments: Optional[Any] = ...):
        ...
    
    def with_base_path(self, base_path):
        ...
    


class Swagger2Specification(Specification):
    yaml_name = ...
    operation_cls = ...
    @classmethod
    def _set_defaults(cls, spec):
        ...
    
    @property
    def produces(self):
        ...
    
    @property
    def consumes(self):
        ...
    
    @property
    def definitions(self):
        ...
    
    @property
    def parameter_definitions(self):
        ...
    
    @property
    def response_definitions(self):
        ...
    
    @property
    def security_definitions(self):
        ...
    
    @property
    def base_path(self):
        ...
    
    @base_path.setter
    def base_path(self, base_path):
        ...
    
    @classmethod
    def _validate_spec(cls, spec):
        ...
    


class OpenAPISpecification(Specification):
    yaml_name = ...
    operation_cls = ...
    @classmethod
    def _set_defaults(cls, spec):
        ...
    
    @property
    def security_definitions(self):
        ...
    
    @property
    def components(self):
        ...
    
    @classmethod
    def _validate_spec(cls, spec):
        ...
    
    @property
    def base_path(self):
        ...
    
    @base_path.setter
    def base_path(self, base_path):
        ...
    


