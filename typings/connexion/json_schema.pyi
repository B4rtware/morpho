"""
This type stub file was generated by pyright.
"""

from jsonschema import Draft4Validator
from jsonschema.validators import extend
from openapi_spec_validator.handlers import UrlHandler
from typing import Any, Optional

default_handlers = { 'http': UrlHandler('http'),'https': UrlHandler('https'),'file': UrlHandler('file') }
def resolve_refs(spec, store: Optional[Any] = ..., handlers: Optional[Any] = ...):
    """
    Resolve JSON references like {"$ref": <some URI>} in a spec.
    Optionally takes a store, which is a mapping from reference URLs to a
    dereferenced objects. Prepopulating the store can avoid network calls.
    """
    ...

def validate_type(validator, types, instance, schema):
    ...

def validate_enum(validator, enums, instance, schema):
    ...

def validate_required(validator, required, instance, schema):
    ...

def validate_readOnly(validator, ro, instance, schema):
    ...

def validate_writeOnly(validator, wo, instance, schema):
    ...

Draft4RequestValidator = extend(Draft4Validator, { 'type': validate_type,'enum': validate_enum,'required': validate_required,'readOnly': validate_readOnly })
Draft4ResponseValidator = extend(Draft4Validator, { 'type': validate_type,'enum': validate_enum,'required': validate_required,'writeOnly': validate_writeOnly,'x-writeOnly': validate_writeOnly })
