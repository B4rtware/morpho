"""
This type stub file was generated by pyright.
"""

import logging
from .operations.secure import SecureOperation

logger = logging.getLogger('connexion.handlers')
RESOLVER_ERROR_ENDPOINT_RANDOM_DIGITS = 6
class AuthErrorHandler(SecureOperation):
    """
    Wraps an error with authentication.
    """
    def __init__(self, api, exception, security, security_definitions):
        """
        This class uses the exception instance to produce the proper response problem in case the
        request is authenticated.

        :param exception: the exception to be wrapped with authentication
        :type exception: werkzeug.exceptions.HTTPException
        :param security: list of security rules the application uses by default
        :type security: list
        :param security_definitions: `Security Definitions Object
            <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#security-definitions-object>`_
        :type security_definitions: dict
        """
        self.exception = ...
    
    @property
    def function(self):
        """
        Configured error auth handler.
        """
        ...
    
    def handle(self, *args, **kwargs):
        """
        Actual handler for the execution after authentication.
        """
        ...
    


class ResolverErrorHandler(SecureOperation):
    """
    Handler for responding to ResolverError.
    """
    def __init__(self, api, status_code, exception, security, security_definitions):
        self.status_code = ...
        self.exception = ...
    
    @property
    def function(self):
        ...
    
    def handle(self, *args, **kwargs):
        ...
    
    @property
    def operation_id(self):
        ...
    
    @property
    def randomize_endpoint(self):
        ...
    
    def get_path_parameter_types(self):
        ...
    


